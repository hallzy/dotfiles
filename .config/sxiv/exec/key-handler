#!/bin/bash

## Helpers

getContentType() {
    file -b --mime-type "$1"
}




## Command Functions

# Delete the current image, or 1 selected image at a time
d_cmd() {
    while read file; do
        res="$(printf "No\nYes" | dmenu -i -p "Really Delete $file?")"
        if [ "$res" != "Yes" ]; then
            return
        fi

        rm -v "$file"
        if [ $? -eq 0 ]; then
            notify-send -u low "SXIV - File Deleted" "$file"
        else
            notify-send -u critical "SXIV - Delete Failed" "$file"
        fi
    done
}

# Delete the current image, or all selected images at once
D_cmd() {
    res="$(printf "No\nYes" | dmenu -i -p "Delete all selected?")"
    if [ "$res" != "Yes" ]; then
        return
    fi
    local success=""
    local failed=""
    while read file; do
        rm -v "$file"
        if [ $? -eq 0 ]; then
            success="${success}\n - ${file}"
        else
            failed="${failed}\n - ${file}"
        fi
    done

    if [ -n "$failed" ]; then
        notify-send -u critical "SXIV - Delete Failed" "$failed"
    fi
    if [ -n "$success" ]; then
        notify-send -u low      "SXIV - File Deleted" "$success"
    fi
}

# Rename image
r_cmd() {
    while read file; do
        res="$(printf "" | dmenu -i -p "Rename '$file' (enter nothing to cancel)")"
        if [ "$res" = "" ]; then
            continue;
        fi

        dirname="$(dirname "$file")"
        filepath="${dirname}/${res}"

        mv -inv "$file" "$filepath"
        if [ $? -eq 0 ]; then
            notify-send -u low "SXIV - File Moved" "$file --> $filepath"
        else
            notify-send -u critical "SXIV - File Move Failed" "$file --> $filepath"
        fi
    done
}

# Open images in shotwell for editing
s_cmd() {
    while read file; do
        shotwell "$file"
    done
}

# Open marked images in a separate slideshow (favourites)
f_cmd() {
    local files=''
    while read file; do
        files="$files $file"
    done
    sxiv -bf -S 5 -s f $files
}


# Copy file to clipboard
c_cmd() {
    # local type
    while read file; do
        # Apparently xclip can only copy png images for some reason... So,
        # convert them to png and pipe to xclip
        convert "$file" png:- | xclip -selection clipboard -target image/png

        if [ $? -eq 0 ]; then
            notify-send -u low "SXIV - File Copied" "$file"
        else
            notify-send -u critical "SXIV - File Copy FAILED" "$file"
        fi
        break
    done
}

# Print the selected filenames to terminal
P_cmd() {
    while read file; do
        echo "$file"
    done
    notify-send -u low "SXIV - Files Printed"
}

case "$1" in
    "c")  c_cmd
    ;;
    "d")  d_cmd
    ;;
    "D")  D_cmd
    ;;
    "r")  r_cmd
    ;;
    "s")  s_cmd
    ;;
    "f")  f_cmd
    ;;
    "P")  P_cmd
    ;;
    *)    notify-send -u critical "SXIV - Invalid Key" "'$1' is not set."
    ;;
esac
