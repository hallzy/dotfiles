#!/bin/bash

# Emoji Manager

normalizeString() {
    echo "$1" | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
}

char2emoji() {
    local letter="$1";
    local offset;
    local a_ascii=65
    local idx;
    local a_emoji=0x1F1E6;

    if [ "$letter" = " " ]; then
        # Space, so add additional spaces to help separate the emojis
        echo "   ";
        return;
    elif [ "$letter" = "?" ]; then
        echo "\U00002754";
        return;
    elif [ "$letter" = "!" ]; then
        echo "\U00002755";
        return;
    elif ! echo "$letter" | grep -q "^[A-Z]$"; then
        echo "$letter";
        return;
    fi

    offset="$(printf "%d" "'$letter")";

    idx=$((offset-a_ascii))

    printf "\\\U000%x" "$((a_emoji+idx))"
}

emojify() {
    local string="$1"
    local char;
    local ret="";

    string="$(normalizeString "$string")"

    for (( i=1; i<=${#string}; i++ )); do
        char="$(printf '%s\n' "$string" | cut -c${i})"

        ret="${ret} $(char2emoji "$char")"
    done

    echo -e "$ret"
}

emojis="$(cat <<EOF
Emojify String
Get Current Time

100 points perfect a+       - 💯
among us                    - 🤫👨‍🚀🔫
angry livid mad             - 😠
car vehicle                 - 🚗
check correct tick          - ✅
confused                    - 😕
cross wrong x               - ❌
crying                      - 😢
disappointed sad            - 😞
drooling                    - 🤤
exclamation mark            - ❕
expressionless ughh         - 😑
eye roll rolling            - 🙄
facepalm                    - 🤦
fingers crossed             - 🤞
fist bump                   - 🤜🤛
fist bump distance          - 🤜        🤛
grinning open smile         - 😀
laugh cry                   - 😂
loudly crying               - 😭
middle finger               - 🖕
moo cow                     - 🐄
nerd face                   - 🤓
neutral face oops           - 😐
ok okay perfect             - 👌
pointing down               - 👇
pointing up                 - 👆
poop                        - 💩
question mark               - ❔
raised eyebrow              - 🤨
rofl rolling floor laughing - 🤣
savoring delicious tasty    - 😋
sleep zzz boring tired      - 💤
snake                       - 🐍
squinting happy tongue      - 😝
sunglasses cool confident   - 😎
thinking hmm                - 🤔
thumbs down                 - 👎
thumbs up                   - 👍
tongue out                  - 😛
trex                        - 🦖
vulcan salute greetings     - 🖖
winking                     - 😉
winking tongue              - 😜
wrench tool                 - 🔧
zaney silly tongue          - 🤪

12:00 - 🕛
12:30 - 🕧
1:00  - 🕐
1:30  - 🕜
2:00  - 🕑
2:30  - 🕝
3:00  - 🕒
3:30  - 🕞
4:00  - 🕓
4:30  - 🕟
5:00  - 🕔
5:30  - 🕠
6:00  - 🕕
6:30  - 🕡
7:00  - 🕖
7:30  - 🕢
8:00  - 🕗
8:30  - 🕣
9:00  - 🕘
9:30  - 🕤
10:00 - 🕙
10:30 - 🕥
11:00 - 🕚
11:30 - 🕦

canada flag                 - 🇨🇦
united kingdom flag         - 🇬🇧
united states american flag - 🇺🇸

confused                 - 「(°ヘ°)
confused shrug           - ¯\(°_o)/¯
crying                   - ༼ ༎ຶ ෴ ༎ຶ༽
flipping table           - (╯°□°）╯︵ ┻━┻
happy                    - (✿◠‿◠)
i see what you did there - (͡° ͜ʖ ͡°)
middle finger            - (凸ಠ益ಠ)凸
shifty eyes              - (¬､¬)
shrug                    - ¯\_(ツ)_/¯
surprised                - (ﾉﾟ0ﾟ)ﾉ

degrees - °
EOF
)"

choice="$(echo -e "$emojis" | dmenu -i -l 20 -c)";

if [ "$choice" = "" ]; then
    exit 0;
elif [ "$choice" = "Emojify String" ]; then
    string="$(echo "" | dmenu -c -i -p "Enter a String: ")";

    if [ "$string" = "" ]; then
        exit 0;
    fi

    toCopy="$(emojify "$string")"
elif [ "$choice" = "Get Current Time" ]; then
    hour="$(date '+%-l')"
    min="$(date '+%M')"

    if [ "$min" -lt 15 ]; then
        min="00";
    elif [ "$min" -lt 45 ]; then
        min="30";
    elif [ "$min" -le 59 ]; then
        min="00";
        hour=$((hour+1))
    fi

    if [ "$hour" -gt 12 ]; then
        hour=1
    fi

    time="${hour}:${min}";

    choice="$(echo -e "$emojis" | env grep -F "${time}")"

    toCopy="$(echo "$choice" | awk -F' *- *' '{ print $2 }')";
else
    toCopy="$(echo "$choice" | awk -F' *- *' '{ print $2 }')";
fi

echo "$toCopy" | tr -d "\n" | xclip -sel clip;
